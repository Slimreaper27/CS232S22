I used -300 and -300 to fail midpoint_B test. It failed because -300 is [1x12C] and -300 is [1x12C] so the midpoint of -300 and -300 is expected to be [1x12C]. However, midpoint_B failed when it computes [(unsigned int)y + (unsigned int)x >> 1] because its result is [1x12C - 1x12C = 0x7FFFFFFF]. The midpoint overflowed when a number under 0 was introduced. The same happened for the numbers -1 and -1, and also caused overflow.