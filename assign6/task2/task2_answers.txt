When we put the numbers X = 9 and Y = 5 into the operation, they both get set into different (but the same) gates - "select 16" gate. This gate will select one of the outputs put through it - and since we've selected 9 for X and 5 for Y ('s' being set as 0, due to the zx and zy flags, and d1 being attached to the 0 gate), they both move through their first iteration as their respective number.
Next, they will both move to another "select 16" and "inv 16" gates - "inv 16" gate takes an input and and inverses it, so 9 would become -10 (fff6) on the 16-bit "map". Similarly with 5, as it passes through the "inv 16" gate, it becomes -6 (fffa). The "select 16" gate copies the previous explanation, and passes through as their respective numbers.
"inv 16" is attached to the 'd1' input on the second "select 16" gate that passed through our X and Y components (individually), and "select 16" selects an input - either fff6 or 9, and fffa and 5. Now, with our fff6 and 9 gate, 's' is connected to 'nx' which is turned ON - or flip switched to '1'. This means that X is inverted, and d1 passed through, making fff6 move to the next gate. In comparison, with our fffa and 5 gate, the 'ny' switch not turned on, and the d0 input passes through, which is 5. So, now we have fff6 (-10) and 5 moving to the next gate. 
Both of these gates outputs are compared at two different gates - which is "add 16" and "and 16". The "add 16" gate does as it says, and adds the two inputs together, turning the 5 to hex and making a combined fffb (-5) output, which moves to the next gate. The "and 16" gate will take the two inputs, combine the hexadecimal then flip. The output becomes 4, and moves to the next gate.
4 and fffb move unto another "select 16" gate, which takes our d1 input (fffb) and moves it to the next gate, since out f switch is turned on and connected to the s input.
Another "inv 16" gate turns our fffb (-5) into 4, and moves it to the next gate.
Lastly, our previous "select 16" gate and current "inv 16" gate are input to the same "select 16" gate, with "inv 16" inputting to d1, and "select 16" gate inputing to d0. The 's' gate is attached to our 'no' switch - making the input 1, instead of 0. Therefore, 4 is passed through last, making our final output 4. 